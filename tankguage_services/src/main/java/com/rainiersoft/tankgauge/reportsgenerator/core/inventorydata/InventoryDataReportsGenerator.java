package com.rainiersoft.tankgauge.reportsgenerator.core.inventorydata;

import java.sql.ResultSet;
import java.sql.Statement;
import java.util.List;

import com.rainiersoft.tankgauge.reportsgenerator.core.GenericHeaderGeneratorManager;
import com.rainiersoft.tankgauge.reportsgenerator.definitions.InventoryReportConstants;
import com.rainiersoft.tankgauge.reportsgenerator.interfaces.GenericSQLReportsResultsetProcessor;
import com.rainiersoft.tankgauge.reportsgenerator.main.TankGaugingReportsGenerator;

public class InventoryDataReportsGenerator extends TankGaugingReportsGenerator {

	public InventoryDataReportsGenerator(Statement sqlStatement) throws Exception {
		
		TankGaugingReportsGenerator.reportsLogger.debug(getClass().getName() + " : Ready to process inventory report...");
		
		// Generic SQL reports generator
		GenericSQLReportsResultsetProcessor sqlRRProcessor = null;

		// Specific PDF reports generator
		InventoryDataPDFReportsGenerator genericPDFRepGen = null;

		// Generic header management
		GenericHeaderGeneratorManager genericHeaderGenMgr = null;
		
		TankGaugingReportsGenerator.reportsLogger.debug(getClass().getName() + " : Executing inventory sql query statement...");

		String inventorySQLQuery = repConfigProperties.getProperty(InventoryReportConstants.INVENTORY_REPORT_QUERY);
		
//		inventorySQLQuery = inventorySQLQuery + " AND ([ALM_NATIVETIMELAST] BETWEEN \'" + 
//				TankGaugingReportsGenerator.reportStartDateAndTime + "\' AND \'" +
//				TankGaugingReportsGenerator.reportEndDateAndTime + "\') ORDER BY [ALM_NATIVETIMELAST] ASC";
		
		TankGaugingReportsGenerator.reportsLogger.debug(getClass().getName() + " : INVENTORY SQL Query Statement - " + inventorySQLQuery);

		ResultSet sqlResultSet = sqlStatement.executeQuery(inventorySQLQuery);

		TankGaugingReportsGenerator.reportsLogger.debug(getClass().getName() + " : Inventory SQL resultset successful...");

		if (sqlResultSet == null) {

			TankGaugingReportsGenerator.reportsLogger
					.debug(getClass().getName() + " : Null results returned, exiting program...");
			System.exit(0);

		}

		TankGaugingReportsGenerator.reportsLogger.debug(getClass().getName() + " : Ready to process inventory SQL resultset...");

		// Process Inventory SQL ResultSet
		sqlRRProcessor = new InventoryDataReportsProcessor();
		List<String[]> inventoryListRowData = sqlRRProcessor.processSQLResultset(sqlResultSet, repConfigProperties);

		TankGaugingReportsGenerator.reportsLogger.debug(getClass().getName() + 
				" : Total records retrieved - " + inventoryListRowData.size());

		// Checking for the result set count
		if (inventoryListRowData.size() == 0) {

			TankGaugingReportsGenerator.reportsLogger
					.debug(getClass().getName() + " : Zero results found with the defined query...");
			
			// Since zero results are found, setting empty row values
			String emptyRowData[] = new String[sqlResultSet.getMetaData().getColumnCount()];
			inventoryListRowData.add(emptyRowData);

		}

		TankGaugingReportsGenerator.reportsLogger.debug(getClass().getName() + " : Ready to generate inventory pdf document...");

		// Generate Inventory PDF Report
		genericPDFRepGen = new InventoryDataPDFReportsGenerator();
		
		// Generic header manager
		genericHeaderGenMgr = new InventoryDataHeaderManager();
		genericHeaderGenMgr.setHeaders();
		
		String autoFileName = genericUtil.getAutoGeneratedFileName(
				repConfigProperties.getProperty(InventoryReportConstants.INVENTORY_PDF_REPORT_FILE_NAME), 
				InventoryReportConstants.INVENTORY_REPORT_TYPE_INPUT_PARAMETER);

		pdfDocument = genericPDFRepGen.printPDFReportHeader(repConfigProperties, 
				InventoryReportConstants.INVENTORY_PDF_REPORT_PATH_NAME, autoFileName, 
				genericHeaderGenMgr, pdfDocument, pdfWriter, null);

		// Generate PDF report by passing on required parameters excluding properties file as null
		pdfDocument = genericPDFRepGen.generatePDFReport
				(pdfDocument, sqlResultSet, inventoryListRowData, null);

		// Close the document
		pdfDocument.close();

		TankGaugingReportsGenerator.reportsLogger.debug(getClass().getName() + " : Successfully generated pdf file...");
		TankGaugingReportsGenerator.reportsLogger.debug(getClass().getName() + " : Path to access - " + 
				repConfigProperties.getProperty(InventoryReportConstants.INVENTORY_PDF_REPORT_PATH_NAME));
		TankGaugingReportsGenerator.reportsLogger.debug(getClass().getName() + " : File Name - " + autoFileName);
		
	}
	
}
